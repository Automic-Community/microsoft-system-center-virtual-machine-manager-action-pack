*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        new_vm_from_vm
Test Template     New VM From VM Template
Library           com.automic.robot.itpa.ItpaLibrary
Library           String
Library           DateTime
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    NewVMName         Path          VMHost        VMNameToUse     AdvancedOptions
New VM from VM with Valid Inputs
                      [Tags]    main_scenarios
                      OK        Generated         ${VM_Path}    ${VM_Host}    ${Source_VM}    ${EMPTY}

New VM from VM with Valid Inputs also providing Advanced Options
                      OK        Generated         ${VM_Path}    ${VM_Host}    ${Source_VM}    -CPUCount 4

Assert Behaviour for Non-Existing Path
                      NOK       Generated         Invalid       ${VM_Host}    ${Source_VM}    ${EMPTY}

Assert Behaviour for Non-Existing VM Host
                      NOK       Generated         ${VM_Path}    Invalid       ${Source_VM}    ${EMPTY}

Assert Behaviour for Non-Existing VM to Use
                      NOK       Generated         ${VM_Path}    ${VM_Host}    Invalid         ${EMPTY}

Assert Behaviour for Non-Existing Advanced Parameter
                      NOK       Generated         ${VM_Path}    ${VM_Host}    ${Source_VM}    Invalid

Assert New VM Name as Mandatory Field
                      NOK       ${EMPTY}          ${VM_Path}    ${VM_Host}    ${Source_VM}    -CPUCount 4

Assert Path as Mandatory Field
                      NOK       Generated         ${EMPTY}      ${VM_Host}    ${Source_VM}    -CPUCount 4

Assert VM Host as Mandatory Field
                      NOK       Generated         ${VM_Path}    ${EMPTY}      ${Source_VM}    -CPUCount 4

Assert Vm Name to Use as Mandatory Field
                      NOK       Generated         ${VM_Path}    ${VM_Host}    ${EMPTY}        -CPUCount 4

*** Keywords ***
Startup
    Log    *******Start Test "NEW VM FROM VM"*******
    Log    *******Connect to AE*******
    Connect AE

New VM From VM Template
    [Arguments]    ${OK_NOK}    ${NewVMName}    ${Path}    ${VMHost}    ${VMNameToUse}    ${AdvancedOptions}
    [Documentation]    This test creates a new vm from an existing vm.
    ...    -Precondition: To execute this test variables used should be changed accordingly. VM to Use should be in Stop State for "OK" Test cases.
    ...    -${OK_NOK}: Boolean value indicate if the action is ENDED_OK or ENDED_NOT_OK/FAULT_OTHER. Value of this variable should be OK or NOK.
    ...    -${NewVMName}: This field specifies the new vm name which you want to provide
    ...    -${Path}: This field specifies the path where the new will be created.
    ...    -${VMHost}: This field specifies the host where the new will be created.
    ...    -${VMNameToUse}: This field specifies the source vm name which will be used to create new one.
    ...    -${AdvancedOptions}: This field specifies advanced parameter for new-scvirtualmachine command.
    Generate String
    Action Create    ${_NEW_VM_FROM_VM_ACTION}
    Common Inputs
    Run Keyword If    '${NewVMName}' == 'Generated'    Action Set    &UC4RB_VMM_NEW_VMNAME#    ${Generated_Name}    ELSE    Action Set
    ...    &UC4RB_VMM_NEW_VMNAME#    ${NewVMName}
    Run Keyword If    '${Path}' == 'Invalid'    Action Set    &UC4RB_VMM_PATH#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_PATH#    ${Path}
    Run Keyword If    '${VMHost}' == 'Invalid'    Action Set    &UC4RB_VMM_VMHOST#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_VMHOST#    ${VMHost}
    Run Keyword If    '${VMNameToUse}' == 'Invalid'    Action Set    &UC4RB_VMM_VMNAME#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_VMNAME#    ${VMNameToUse}
    Run Keyword If    '${AdvancedOptions}' == 'Invalid'    Action Set    &UC4RB_VMM_ADV_OPTIONS#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_ADV_OPTIONS#    ${AdvancedOptions}
    Set Overwrite Agent
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Assert Success    ELSE IF    '${OK_NOK}' == 'NOK'    Assert Failure

Teardown
    Log    *******End Test "NEW VM FROM VM"*******
