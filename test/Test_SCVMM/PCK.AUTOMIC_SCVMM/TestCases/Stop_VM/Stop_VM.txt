*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        stop_vm
Default Tags
Test Template     Stop VM Template
Library           com.automic.robot.itpa.ItpaLibrary
Library           String
Library           DateTime
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    VMName            VMHost        Force    SaveState    AdvancedOptions
Stop VM With Valid Inputs Without Providing VM Host,Force,Save_state and Advanced Options
                      [Tags]    main_scenarios
                      OK        ${Source_VM}      ${EMPTY}      No       No           ${EMPTY}

Stopping an already stopped VM also providing VM Host and Advanced Options
                      OK        ${Source_VM}      ${VM_Host}    No       No           -RunAsynchronously

Assertion With Non-Existing VM Name
                      [Tags]    main_scenarios
                      NOK       Invalid           ${VM_Host}    No       No           ${EMPTY}

Assert Behaviour when more than one VM exists for provided VM Name
                      NOK       VM*               ${EMPTY}      No       No           ${EMPTY}

Assertion With Non-Existing VM Host
                      NOK       ${Source_VM}      Invalid       NO       No           ${EMPTY}

Assertion for Non-Existing Advanced Parameter
                      NOK       ${Source_VM}      ${VM_Host}    No       No           Invalid

Assert VM Name as Mandatory Field
                      NOK       ${EMPTY}          ${VM_Host}    No       NO           -RunAsynchronously

*** Keywords ***
Startup
    Log    *******Start Test "Stop VM"*******
    Log    *******Connect to AE*******
    Connect AE

Stop VM Template
    [Arguments]    ${OK_NOK}    ${VMName}    ${VMHost}    ${Force}    ${SaveState}    ${AdvancedOptions}
    [Documentation]    This test is used to stop the given VM.
    ...    -Precondition: To run this test suite, SCVMM credentials should be known to user.
    ...    -${VMName}: This field specifies Name of the Virtual Machine you want to stop.
    ...    -${VMHost}: This field Specify the host from which you want to stop VM.
    ...    -${Force} : This field Specify whether command will be forced.
    ...    -${SaveState}: This field Specify whether if you want to save the state.
    ...    -${AdvancedOptions}: This field specifies advanced parameter for stop-scvirtualmachine command.
    Generate String
    Action Create    ${_STOP_VM_ACTION}
    Common Inputs
    Run Keyword If    '${VMName}' == 'Invalid'    Action Set    &UC4RB_VMM_VMNAME#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_VMNAME#    ${VMName}
    Run Keyword If    '${VMHost}' == 'Invalid'    Action Set    &UC4RB_VMM_VMHOST#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_VMHOST#    ${VMHost}
    Run Keyword If    '${AdvancedOptions}' == 'Invalid'    Action Set    &UC4RB_VMM_ADV_OPTIONS#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_ADV_OPTIONS#    ${AdvancedOptions}
    Action Set    &UC4RB_VMM_FORCE#    ${Force}
    Action Set    &UC4RB_VMM_SAVE_STATE#    ${SaveState}
    Set Overwrite Agent
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Assert Success    ELSE IF    '${OK_NOK}' == 'NOK'    Assert Failure

Teardown
    Log    *******End Test "Stop VM"*******
