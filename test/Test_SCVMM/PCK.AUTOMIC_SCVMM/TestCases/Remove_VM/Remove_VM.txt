*** Settings ***
Suite Setup       Startup
Suite Teardown    Teardown
Force Tags        remove_vm
Default Tags
Test Template     Remove VM Template
Library           com.automic.robot.itpa.ItpaLibrary
Library           String
Library           DateTime
Resource          ../../Resources/messages.txt
Resource          ../../Resources/keywords.txt
Resource          ../../Resources/variables.txt
Resource          ../../Resources/actions.txt

*** Test Cases ***    OK_NOK    VM_Name            VM_Host            Force    AdvancedOptions

Remove VM With Valid Inputs Without Providing VM Host,Force and Advanced Options
                          main_scenarios
                      OK         ${VM_Name_Remove}       ${EMPTY}           No       ${EMPTY}
Remove VM With Valid Inputs With Providing VM Host,Force and Advanced Options
                          
                      OK         ${VM_Name_Remove}       ${VM_Host_Remove}    Yes       -RunAsynchronously

Assertion With Non-Existing VM Name
                          main_scenarios
                      NOK       Invalid              ${VM_Host_Remove}    No       ${EMPTY}

Assertion With Non-Existing VM Host
                          
                      NOK      ${VM_Name_Remove}     Invalid            No       ${EMPTY}

Assertion for Non-Existing Advanced Parameter
                         
                        NOK  ${VM_Name_Remove}      ${VM_Host_Remove}   No       Invalid
                      

Assertion for VM Name as Mandatory Field
                          
                      NOK       ${EMPTY}           ${VM_Host_Remove}    No       -RunAsynchronously

*** Keywords ***
Startup
    Log    *******Start Test "Remove VM"*******
    Log    *******Connect to AE*******
    Connect AE

Remove VM Template
    [Arguments]    ${OK_NOK}    ${VM_Name}    ${VM_Host}    ${Force}    ${AdvancedOptions}
    [Documentation]    This test is used to stop the given VM.
    ...    -Precondition: To run this test suite, SCVMM credentials should be known to user and VM state should be in stopped or save state. 
    ...   -${OK_NOK}: Boolean value indicate if the action is ENDED_OK or ENDED_NOT_OK/FAULT_OTHER. Value of this variable should be OK or NOK.
    ...    -${VM_Name}: This field specifies Name of the Virtual Machine you want to remove.
    ...    -${VM_Host}: This field Specify Name of the VM Host in which VM is located..
    ...    -${Force} : This field Specify whether command will be forced.
    ...    -${AdvancedOptions}: This field specifies advanced parameter for remove virtual machine command.
    Generate String
    Action Create    ${_REMOVE_VM_ACTION}
    Common Inputs
    Run Keyword If    '${VM_Name}' == 'Invalid'    Action Set    &UC4RB_VMM_VMNAME#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_VMNAME#    ${VM_Name}
    Run Keyword If    '${VM_Host}' == 'Invalid'    Action Set    &UC4RB_VMM_VMHOST#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_VMHOST#    ${VM_Host}
    Run Keyword If    '${AdvancedOptions}' == 'Invalid'    Action Set    &UC4RB_VMM_ADV_OPTIONS#    ${Generated_Name}_${Time}    ELSE    Action Set
    ...    &UC4RB_VMM_ADV_OPTIONS#    ${AdvancedOptions}
    Action Set    &UC4RB_VMM_FORCE#    ${Force}
    Set Overwrite Agent
    Action Execute
    Run Keyword If    '${OK_NOK}' == 'OK'    Assert Success    ELSE IF    '${OK_NOK}' == 'NOK'    Assert Failure  
    

Teardown
    Log    *******End Test "Remove VM"*******
